.halloeditor{font-family:Roboto Slab,Georgia,serif;padding-top:4em;min-height:50px;overflow:hidden;line-height:1.5em}.halloeditor h1,.halloeditor h2{text-transform:none}.halloeditor h2{display:block}.halloeditor h1 span{font-weight:400;color:inherit}.halloeditor :after,.halloeditor :before{display:none}.halloeditor ol,.halloeditor ul{margin:1em 0;padding:0 0 0 40px}.halloeditor li{display:list-item}.halloeditor ul li{list-style-type:disc}.halloeditor ol li{list-style-type:decimal}.halloeditor h1,.halloeditor h2,.halloeditor h3,.halloeditor h4,.halloeditor h5,.halloeditor h6{font-family:inherit}.halloeditor h2{font-size:2em;line-height:1.2em;clear:both}.halloeditor h3{font-size:1.7em;line-height:1.194em}.halloeditor h4{font-size:1.5em;line-height:1.267em}.halloeditor h5{font-size:1.2em;line-height:1.27em}.halloeditor hr{border-bottom:1px solid #ccc;border-top:0;border-left:0}.hallotoolbar{position:absolute;z-index:5;margin-top:4em;margin-left:1.2em}.hallotoolbar.affixed{position:fixed;margin-top:0}.hallotoolbar.full{margin-left:20px}@media screen and (min-width:50em){.hallotoolbar.full{margin-left:50px}}.hallotoolbar button{border-radius:0;height:2.4em}.halloembed{position:relative}.halloembed__delete{position:absolute;display:none;right:0;cursor:pointer}.halloembed__delete:before{background-color:hsla(0,0%,100%,.8)}.halloembed__delete:hover:before{background-color:#fff}.inEditMode .halloembed__delete{display:block}.richtext-image{margin-top:3px}.richtext-image.small{max-width:45%}.richtext-image.left{float:left;margin-right:16px}.richtext-image.right{float:right;margin-left:16px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
