@charset "UTF-8";.page-editor .content-wrapper{margin-bottom:10em}.page-editor .breadcrumb{margin:-1.2em 0 2em;padding-left:calc(50px - 2em)}@media screen and (min-width:50em){.page-editor .breadcrumb{margin-top:-1.8em;margin-left:-50px;margin-right:-50px}}.page-editor .modal .breadcrumb{margin:0;background-color:initial}.page-editor .modal .breadcrumb a{color:#4d4d4d}.page-editor .modal .breadcrumb li:hover{background-color:#e6e6e6}.page-editor .modal .breadcrumb .home{padding-left:0}.page-editor h1{font-size:1.915em}.page-editor h1.header-title{text-transform:none}.page-editor .header-title{padding-left:0}.page-editor .modal-body .header-title h1{font-size:1.5em}.page-editor .header-meta{list-style:none;margin-top:0;margin-bottom:0;padding:0}.page-editor .header-meta li{border:0;float:left;height:1.5em;line-height:2em;margin:1em .75em 1.5em 0}.page-editor .header-meta li .icon{width:1.25em;height:1.25em;vertical-align:text-bottom;margin-right:.2em}.page-editor .header-meta li .icon-warning{width:1.5em;height:1.5em;vertical-align:text-top}.page-editor .header-meta li:first-child .button{margin-left:-.8em}.page-editor .header-meta li .avatar{margin-left:0}.page-editor .header-meta .button{font-size:1em;font-weight:600;margin-top:-.25em;overflow:initial;height:2.5em;line-height:2.5em}.page-editor .header-meta .action-workflow-status{font-weight:600}.page-editor .header-meta .action-workflow-status span{font-weight:300}.page-editor .header-meta .human-readable-date{display:inline}.page-editor .header-meta--status{padding-right:.8em}.page-editor .header-meta--type{padding:0 .8em}.object{padding-left:20px;padding-right:20px;position:relative}@media screen and (min-width:50em){.object{padding-left:50px;padding-right:50px}}.object:first-child{border:0}.object.focused{border-color:var(--color-input-focus-border)}.object .field-row,.object fieldset{padding-top:52px}.object fieldset{padding-left:0;padding-right:0}.object fieldset .field-row{padding-top:0}.object .object-help{display:block;position:relative;z-index:1;top:40px;margin-top:0;padding-top:1em;padding-right:1.5%;padding-left:3em;opacity:1}.object .object-help .icon-help{margin-left:-1.75em}.object:hover .object-help{opacity:1}.object>.title-wrapper{box-sizing:border-box;height:40px;-webkit-font-smoothing:auto;background:#fcf2f2;color:#200200;text-transform:uppercase;padding:.9em 0 .9em 5em;font-size:.95em;margin:0;line-height:1.5em;font-weight:400;position:absolute;top:0;left:0;right:0;z-index:1;overflow:hidden}.object>.title-wrapper label{display:inline;text-transform:inherit;font-weight:inherit;float:none;width:auto;color:inherit;font-size:inherit}.object>.title-wrapper:before{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-shadow:none;font-family:wagtail;text-transform:none;content:"";text-align:center;display:block;position:absolute;z-index:2;font-size:2em;top:0;line-height:1.8em;left:0;width:50px;color:#fff;padding:0;margin:0;background-color:#f37e77}.object .halloeditor{padding-top:1em;padding-bottom:1em}.object .halloeditor.expanded{padding-top:5em;padding-bottom:2em}.object.required>.title-wrapper label:after{content:"*";color:#cd3238;font-weight:700;display:inline-block;margin-left:.5em;line-height:1em;font-size:13px}.object.full fieldset{display:block;float:none}.object.full li{padding:0}.object.full .halloeditor{padding-top:3em;padding-bottom:3em}.object.full .halloeditor.expanded{padding-top:5em;padding-bottom:5em}.object.full .error-message{padding-left:20px;padding-right:20px;padding-bottom:2em}@media screen and (min-width:50em){.object.full .error-message{padding-left:50px;padding-right:50px}}.object.full .error,.object.full .error .halloeditor,.object.full .error input:not([type=submit]),.object.full .error textarea{background-color:#fee7e8}.object.stream-field{padding-left:20px;padding-right:20px}.object.stream-field .object-layout_big-part{max-width:100%}.object.stream-field fieldset{padding-bottom:0;max-width:unset;min-width:0}.object.stream-field .block_field>.field-content{width:100%}.object.publishing>.title-wrapper:before{content:"";font-size:1.8rem;line-height:1.4em;width:1.4em}.object.privacy>.title-wrapper:before{content:""}.object .multiple{padding:4.5em 0 0}.object .multiple fieldset{padding-top:0;padding-bottom:0}.object .fields{max-width:100%}.object .fields .multiple{padding-top:0}.object .add{padding-top:1em}.object.empty,.object.empty>h3{border-bottom:1px solid #fff}.object.empty>h3{margin:0}.object.empty .add{position:relative;z-index:2;top:0;left:0;width:3.3em;padding:0;margin:0 0 0 -20px;cursor:pointer}body.ready .object.empty .add{transition:background-color .2s ease}.object.empty .add .button{border-radius:0;overflow:visible;background-color:#fcf2f2;font-size:0;width:2em}.object.empty .add .button:before{position:relative;padding:0;line-height:1.8em;font-size:1.4rem;width:1.8em;background-color:#f37e77}.object.empty .add .button:hover:before{background-color:#f16860}.object.empty .multiple{padding:0}.object.collapsible{min-height:41px}.object.collapsible .title-wrapper:before{content:"";cursor:pointer}.object.collapsible.collapsed .title-wrapper:before{content:""}.full .halloeditor,.full input:not([type=submit]),.full textarea{border-radius:0;padding:1.5em 20px;font-size:1.2em;line-height:1.6em}@media screen and (min-width:50em){.full .halloeditor,.full input:not([type=submit]),.full textarea{padding-left:50px;padding-right:50px}}.title .halloeditor,.title input:not([type=submit]),.title textarea{font-size:2em;font-family:Roboto Slab,Georgia,serif}footer .actions .button{font-weight:600;text-overflow:ellipsis}footer .preview .button,footer .preview button{padding:0 1em;background-color:#666;border-color:#666}footer .preview .button .icon,footer .preview button .icon{margin-right:.5em}@media screen and (max-width:49.9375em){footer .preview .button,footer .preview button{width:100%;margin-top:2px;margin-bottom:2px;height:3em}}footer .preview .button:hover,footer .preview button:hover{background-color:#4d4d4d;border-color:#4d4d4d}footer .preview .dropdown .button,footer .preview .dropdown button,footer .preview .dropdown input[type=button],footer .preview .dropdown input[type=submit]{background-color:#666;border-color:#666}footer .preview .dropdown .button:hover,footer .preview .dropdown button:hover,footer .preview .dropdown input[type=button]:hover,footer .preview .dropdown input[type=submit]:hover{background-color:#4d4d4d;border-color:#4d4d4d}footer .preview .dropdown .dropdown-toggle,footer .preview .dropdown ul{background-color:#666}footer .preview .dropdown .dropdown-toggle:hover,footer .preview .dropdown.open>.button+.dropdown-toggle{background-color:#4d4d4d}@media screen and (min-width:50em){.object fieldset{display:block;float:none;max-width:1024px;padding-left:0;padding-right:0}.object fieldset fieldset{width:100%}.object .object-layout{display:flex;flex-flow:row-reverse wrap}.object .object-layout_small-part{flex:1 0 0%}.object .object-layout_big-part{flex:5 0 0%}.object .object-help{padding-bottom:40px;margin-left:10px;opacity:0}.object.stream-field .object-help{padding-left:6.4em}.object.full fieldset{display:block;float:none;margin-left:-51px;padding:40px 0 0}.object.full .halloeditor,.object.full input:not([type=submit]),.object.full textarea{border-width:0 1px}.object.full .field{padding:0}.object.full .field-content{display:block;float:none;width:auto;padding:inherit}.object .multiple{box-sizing:border-box;display:inline;float:left;width:83.3333333333%;padding-left:0;padding-right:0}.object.empty .add{margin:0 0 0 -50px}.tab-content--comments-enabled .object{padding-right:27%}.tab-content--comments-enabled .object.full{padding-right:36%}}@media screen and (min-width:50em) and (min-width:75em){.tab-content--comments-enabled .object{padding-right:30%}.tab-content--comments-enabled .object.full{padding-right:36%}}.button.button--live{background-color:#fff;color:var(--color-primary);border-radius:2px;font-size:14px;font-weight:600;line-height:2.3em;padding:0 .75em}.button.button--live .icon{width:1.25em;height:1.25em;vertical-align:text-top;margin-right:.25em}.button.button--live:hover{background-color:var(--color-primary-darker);color:#fff}.workflow-timeline{list-style:none;padding:0}.workflow-timeline li{margin-bottom:1.25em;position:relative}.workflow-timeline li:not(:last-child):after{content:"";color:#d9d9d9;position:absolute;top:1.5em;left:calc(0.75em - 1px);height:100%;border-left:2px dotted}.workflow-timeline .icon{fill:#d9d9d9}.workflow-timeline .in_progress{font-weight:700}.workflow-timeline .in_progress .icon{fill:#262626}.workflow-timeline .approved .icon{fill:var(--color-primary)}.workflow-timeline .needs_changes .icon,.workflow-timeline .rejected .icon{fill:#e9b04d}.workflow-timeline .cancelled .icon{fill:#b4191f}@media (forced-colors:active){.object{border-top:1px solid GrayText}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
